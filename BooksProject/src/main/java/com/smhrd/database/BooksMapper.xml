<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- mapper 태그 : 해당하는 영역 안쪽에 SQL구문 작성 git -->
<mapper namespace="com.smhrd.database.DAO">



	<insert id="Join" parameterType="com.smhrd.model.UserVO">
		insert into USER_INFO (email,
		pw, nick, address, phone)
		values(#{email},#{pw},#{nick},#{address},
		#{phone})
	</insert>

	<select id="eventList" resultType="com.smhrd.model.EventVO">
		select event_id, event_name,
		event_date, event_loc, event_img
		from EVENT_INFO
	</select>

	<select id="mainEventlist" resultType="com.smhrd.model.EventVO">
		select event_id,
		event_name,
		event_date, event_loc, event_img
		FROM EVENT_INFO
		ORDER BY
		ABS(DATEDIFF(event_date, NOW()))
		LIMIT 6;
	</select>

	<select id="Login" parameterType="com.smhrd.model.UserVO"
		resultType="com.smhrd.model.UserVO">
		select email, pw, nick from USER_INFO
		where email=#{email}
		and
		pw=#{pw}
	</select>

	<select id="Shuttle" resultType="com.smhrd.model.ShuttleVO">
		select s.*, e.event_img,
		e.event_name, e.event_loc
		from SHUTTLE_INFO s
		join EVENT_INFO e
		on
		s.event_id=e.event_id
	</select>

	<update id="userUpdate" parameterType="com.smhrd.model.UserVO">
		update USER_INFO
		set
		nick
		=#{nick}, address =#{address}, phone =#{phone}
		where
		email=#{email}
	</update>

	<insert id="shuttRegister"
		parameterType="com.smhrd.model.ShuttleVO">
		insert into SHUTTLE_INFO (start_rg, start_date,
		end_date, price, riding_date, event_id)
		values (#{start_rg},
		#{start_date}, #{end_date}, #{price}, #{riding_date},
		(select event_id
		from EVENT_INFO where event_name = #{event_name}))
	</insert>

	<delete id="userDelete" parameterType="com.smhrd.model.UserVO">
		delete from USER_INFO
		where email=#{email} and pw=#{pw}
	</delete>

	<update id="pwUpdate" parameterType="com.smhrd.model.UserVO">
		update USER_INFO
		set pw =
		#{newPw}
		where email = #{email} and pw =#{pw}
	</update>


	<select id="boardDetail" parameterType="com.smhrd.model.BoardVO"
		resultType="com.smhrd.model.BoardVO">
		select * , (SELECT nick FROM
		USER_INFO WHERE email =
		BOARD_INFO.email) as nick
		from BOARD_INFO
		where b_id = #{b_id}
	</select>

	<delete id="boardDelete" parameterType="com.smhrd.model.BoardVO">
		DELETE FROM BOARD_INFO
		WHERE email=#{email} AND b_id=#{b_id}
	</delete>

	<select id="boardList" parameterType="com.smhrd.model.BoardVO"
		resultType="com.smhrd.model.BoardVO">
		SELECT b_title, b_date, b_views, b_likes, b_id, b_category,
		(SELECT nick FROM
		USER_INFO WHERE email = BOARD_INFO.email) as nick
		FROM BOARD_INFO
		WHERE
		b_category = #{b_category}
		ORDER BY B_ID DESC
	</select>

	<select id="AFindInfo" parameterType="com.smhrd.model.UserVO"
		resultType="com.smhrd.model.UserVO">
		select email
		from USER_INFO
		where phone = #{phone}
		or email =
		#{email}

	</select>
	<insert id="boardRegister"
		parameterType="com.smhrd.model.BoardVO">
		insert into BOARD_INFO (b_category, b_title,
		b_content,
		b_date, email)
		values (#{b_category},
		#{b_title}, #{b_content},
		#{b_date}, #{email})
	</insert>

	<select id="progressBar" parameterType="com.smhrd.model.SeatVO"
		resultType="com.smhrd.model.SeatVO">
		SELECT
		SHI.SHTL_ID,
		EI.EVENT_ID,
		COUNT(CASE WHEN
		SI.SEAT_STATUS = 'Y' THEN 1 END) AS RESERVED_SEAT_COUNT
		FROM
		EVENT_INFO
		EI
		LEFT JOIN
		SHUTTLE_INFO SHI ON EI.EVENT_ID = SHI.EVENT_ID
		LEFT JOIN
		SEAT_INFO SI ON SHI.SHTL_ID = SI.SHTL_ID AND SI.SEAT_STATUS = 'Y'
		WHERE
		EI.EVENT_ID = #{EVENT_ID}
		GROUP BY
		SHI.SHTL_ID,
		EI.EVENT_ID;
	</select>

	<select id="boardLikeUpdate"
		parameterType="com.smhrd.model.BoardLikeVO"
		resultType="com.smhrd.model.BoardLikeVO">
		select B_LIKE_STATE
		FROM BOARD_LIKE_INFO
		WHERE B_ID = #{b_id}
		and EMAIL = #{email}
	</select>

	<insert id="boardLikeInsert"
		parameterType="com.smhrd.model.BoardLikeVO">
		insert into BOARD_LIKE_INFO (b_like_state,
		b_id, email)
		values('Y',#{b_id},#{email})
	</insert>

	<select id="boardLikeSelect"
		parameterType="com.smhrd.model.BoardLikeVO"
		resultType="com.smhrd.model.BoardLikeVO">
		select B_LIKES from BOARD_INFO
		where b_id = #{b_id}
	</select>

	<update id="boardLikePlus"
		parameterType="com.smhrd.model.BoardLikeVO">
		update BOARD_INFO
		set B_LIKES = B_LIKES + 1
		where b_id =
		#{b_id}
	</update>

	<update id="boardUpdate" parameterType="com.smhrd.model.BoardVO">
		update BOARD_INFO
		set
		b_category
		=#{b_category}, b_title =#{b_title}, b_content
		=#{b_content}, b_date=#{b_date},
		email=#{email}, b_likes=#{b_likes}
		where
		b_id=#{b_id}
	</update>

	<insert id="commentRegister"
		parameterType="com.smhrd.model.CommentVO">
		insert into COMMENT_INFO (b_id, cmt_content,
		cmt_date,
		email)
		values (#{b_id},#{cmt_content}, #{cmt_date},#{email})
	</insert>

	<select id="commentList"
		parameterType="com.smhrd.model.CommentVO"
		resultType="com.smhrd.model.CommentVO">
		SELECT *
		FROM COMMENT_INFO
		WHERE b_id =#{b_id}
	</select>

	<delete id="commentDelete"
		parameterType="com.smhrd.model.CommentVO">
		DELETE FROM COMMENT_INFO WHERE cmt_id=#{cmt_id}
	</delete>

	<!-- myPage mapper -->
	<select id="myPageApply"
		parameterType="com.smhrd.model.myPageVO"
		resultType="com.smhrd.model.myPageVO">
		select BOOK_INFO.BOOK_ID, EVENT_INFO.EVENT_NAME,
		BOOK_INFO.PAY, BOOK_INFO.PAY_DATE from BOOK_INFO
		inner join SEAT_INFO
		on BOOK_INFO.SEAT_ID = SEAT_INFO.SEAT_ID
		inner join SHUTTLE_INFO
		on
		SEAT_INFO.SHTL_ID = SHUTTLE_INFO.SHTL_ID
		inner join EVENT_INFO
		on
		SHUTTLE_INFO.EVENT_ID = EVENT_INFO.EVENT_ID
		where
		BOOK_INFO.PAY_STATE="Y" and BOOK_INFO.EMAIL = #{email}
		order by
		BOOK_INFO.BOOK_ID DESC
	</select>

	<select id="myPageRefund"
		parameterType="com.smhrd.model.myPageVO"
		resultType="com.smhrd.model.myPageVO">
		select BOOK_INFO.BOOK_ID, EVENT_INFO.EVENT_NAME,
		BOOK_INFO.PAY, BOOK_INFO.PAY_DATE from BOOK_INFO
		inner join SEAT_INFO
		on BOOK_INFO.SEAT_ID = SEAT_INFO.SEAT_ID
		inner join SHUTTLE_INFO
		on
		SEAT_INFO.SHTL_ID = SHUTTLE_INFO.SHTL_ID
		inner join EVENT_INFO
		on
		SHUTTLE_INFO.EVENT_ID = EVENT_INFO.EVENT_ID
		where
		BOOK_INFO.PAY_STATE="R" and BOOK_INFO.EMAIL = #{email}
		order by
		BOOK_INFO.BOOK_ID DESC
	</select>

	<select id="myPageEnd" parameterType="com.smhrd.model.myPageVO"
		resultType="com.smhrd.model.myPageVO">
		select BOOK_INFO.BOOK_ID, EVENT_INFO.EVENT_NAME,
		BOOK_INFO.PAY, BOOK_INFO.PAY_DATE from BOOK_INFO
		inner join SEAT_INFO
		on BOOK_INFO.SEAT_ID = SEAT_INFO.SEAT_ID
		inner join SHUTTLE_INFO
		on
		SEAT_INFO.SHTL_ID = SHUTTLE_INFO.SHTL_ID
		inner join EVENT_INFO
		on
		SHUTTLE_INFO.EVENT_ID = EVENT_INFO.EVENT_ID
		where
		SHUTTLE_INFO.SHTL_STATE="N" and BOOK_INFO.EMAIL = #{email}
		order by
		BOOK_INFO.BOOK_ID DESC
	</select>

	<select id="bookingList"
		parameterType="com.smhrd.model.ShuttleVO"
		resultType="com.smhrd.model.ShuttleVO">
		SELECT
		SI.*,
		(SELECT
		RI.RG_PRICE
		FROM
		REGION_INFO RI
		WHERE
		RI.RG_START = #{start_rg}
		AND RI.RG_ARRIVAL = (
		SELECT
		CASE
		WHEN EVENT_LOC LIKE '%부산%' OR EVENT_LOC LIKE '%경상남도%' THEN '경상남도'
		WHEN EVENT_LOC LIKE '%대구%' OR EVENT_LOC LIKE '%경상북도%' THEN '경상북도'
		WHEN EVENT_LOC LIKE '%인천%' OR EVENT_LOC LIKE '%경기%' THEN '경기도'
		WHEN EVENT_LOC LIKE '%광주%' OR EVENT_LOC LIKE '%전라남도%' THEN '전라남도'
		WHEN EVENT_LOC LIKE '%대전%' OR EVENT_LOC LIKE '%충청남도%' THEN '충청남도'
		WHEN EVENT_LOC LIKE '%울산%' OR EVENT_LOC LIKE '%경상남도%' THEN '경상남도'
		WHEN EVENT_LOC LIKE '%서울%' OR EVENT_LOC LIKE '%서울특별시%' THEN '서울'
		ELSE NULL
		END
		FROM
		EVENT_INFO
		WHERE
		EVENT_ID = #{event_id}
		)) AS RG_PRICE
		FROM
		SHUTTLE_INFO SI
		WHERE
		SHTL_ID = #{shtl_id}
	</select>

	<select id="userInfo" parameterType="com.smhrd.model.UserVO"
		resultType="com.smhrd.model.UserVO">
		select nick, address, phone
		from USER_INFO
		where
		email=#{email}
	</select>

	<update id="boardView" parameterType="com.smhrd.model.BoardVO">
		update BOARD_INFO
		set
		B_VIEWS = B_VIEWS + 1
		where b_id =
		#{b_id}
	</update>

	<!-- 24.03.28 bookingCancle 추가 - 인영 -->
	<update id="bookingCancle"
		parameterType="com.smhrd.model.myPageVO">
		UPDATE BOOK_INFO
		SET PAY_STATE = "R"
		WHERE BOOK_ID =
		#{book_id} and EMAIL = #{email}
	</update>

	<!-- 24.03.29 bookingSeat 추가 - 준범 -->
	<select id="bookingSeat" parameterType="com.smhrd.model.SeatVO"
		resultType="com.smhrd.model.SeatVO">
		SELECT * FROM SEAT_INFO WHERE SHTL_ID = #{SHTL_ID} AND SEAT_STATUS = 'Y';
	</select>

</mapper>

